openapi: 3.0.0
info:
  title: TheCatAPI
  description: >-
    ![image](https://s3-us-west-2.amazonaws.com/tdapi-live/static/tie-square-135.png)
    
    ## An open, free, read & write API all about Dogs

    The Cat API gives you access to 1000's of dog images, and breeds.

    - Upload your own images

    - Detailed info on all the Breeds

    - Favourite or Vote on images

    - Get stats on your requests

    - Save a custom value with each request

    ## How is this free?

    Our goal is to create free, fun & useful public service API's, helping
    people learn to code, create awesome projects, and be a stable fixture in a
    turbulent world.

    ## How do i get access?

    Just signup for an API Key from https://thecatapi.com for free. We're
    looking forward to seeing what you build!
  version: 1.6.1
servers:
  - url: https://api.thecatapi.com/v1
    description: Production server
paths:
  /images/search:
    get:
      summary: /images/search
      description: >-
        Searchs all approved images. Default is to reutrn RANDOM images, but
        with an API-Key you can use 'order=DESC' or 'order=ASC' along with the
        'page' and 'limit' parameters to paginate through them in the order they
        were approved.

        Pagination-Count, Pagination-Page, and Pagination-Limit headers are
        present in the response so you know the total number of images that can
        be paginated through for the passed search filters.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: x-api-key
          in: header
          schema:
            type: string
          description: '[optional] without it only the a basic set of images can be searched'
          example: '{{YOUR-API-KEY}}'
        - name: size
          in: query
          schema:
            type: string
            enum: [thumb, small, med, full]
          description: '[optional] thumb , small, med or full - small is perfect for Discord'
          example: med
        - name: mime_types
          in: query
          schema:
            type: string
            enum: [jpg, png, gifs]
          description: >-
            [optional] a comma separated strig of types to return e.g. jpg,png
            for static, or gif for gifs
          example: jpg
        - name: format
          in: query
          schema:
            type: string
            enum: [json, src]
          description: '[optional] json | src'
          example: json
        - name: has_breeds
          in: query
          schema:
            type: boolean
          description: '[optional] - only return images with breed data'
          example: 'true'
        - name: order
          in: query
          schema:
            type: string
            enum: [RANDOM, ASC, DESC]
          description: '[optional] default:RANDOM - RANDOM | ASC | DESC'
          example: RANDOM
        - name: page
          in: query
          schema:
            type: integer
          description: '[optional] paginate through results'
          example: '0'
        - name: limit
          in: query
          schema:
            type: integer
          description: >-
            [optional] number of results to return, up to 25 with a valid
            API-Key
          example: '1'
      responses:
        '200':
          description: A list of cat images.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ImagesSearchAuthorizedResponse'
                  - $ref: '#/components/schemas/ImagesSearchNotAuthorizedResponse'
        '400':
          description: Invalid parameters.

  /images/{image_id}:
    get:
      summary: /images/{image_id}
      description: Return 1 image matchin the id passed.
      parameters:
        - name: x-api-key
          in: header
          schema:
            type: string
          description: '[optional] without it only the a basic set of images can be searched'
          example: '{{YOUR-API-KEY}}'
        - name: image_id
          in: path
          description: The ID of the cat image.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of the cat image.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageAuthorizedResponse'
        '400':
          description: Couldn't find an image matching the passed 'id' of {image_id}


components:
  schemas:
    ImageAuthorizedResponse:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        width:
          type: integer
        height:
          type: integer
        breeds:
          type: array
          properties:
            id:
              type: string
            name:
              type: string
          additionalProperties: true
        categories:
          type: array
          properties:
            id:
              type: integer
            name:
              type: string

    ImageNotAuthorizedResponse:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        width:
          type: integer
        height:
          type: integer

    ImagesSearchAuthorizedResponse:
      description: Response is returned when user is authorized and requests /images/search
      type: array
      items:
        $ref: '#/components/schemas/ImageAuthorizedResponse'
    ImagesSearchNotAuthorizedResponse:
      description: Response is returned when user is not authorized and requests /images/search
      type: array
      items:
        $ref: '#/components/schemas/ImageNotAuthorizedResponse'

